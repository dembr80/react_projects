{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Query = require('./query');\n\nvar _require = require('stream'),\n    Readable = _require.Readable;\n/**\n * Protocol COM_QUERY with streaming events.\n * see : https://mariadb.com/kb/en/library/com_query/\n */\n\n\nvar Stream =\n/*#__PURE__*/\nfunction (_Query) {\n  _inherits(Stream, _Query);\n\n  function Stream(cmdOpts, connOpts, sql, values, socket) {\n    var _this;\n\n    _classCallCheck(this, Stream);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stream).call(this, function () {}, function () {}, cmdOpts, connOpts, sql, values));\n    _this.socket = socket;\n    _this.inStream = new Readable({\n      objectMode: true,\n      read: function read() {}\n    });\n\n    _this.on('fields', function (meta) {\n      this.inStream.emit('fields', meta);\n    });\n\n    _this.on('error', function (err) {\n      this.inStream.emit('error', err);\n    });\n\n    _this.on('end', function (err) {\n      if (err) this.inStream.emit('error', err);\n      this.inStream.push(null);\n    });\n\n    return _this;\n  }\n\n  _createClass(Stream, [{\n    key: \"handleNewRows\",\n    value: function handleNewRows(row) {\n      this.inStream.push(row);\n    }\n  }]);\n\n  return Stream;\n}(Query);\n\nmodule.exports = Stream;","map":{"version":3,"sources":["C:/Users/dembr/Documents/GitHub/react_projects/react-urol-database/node_modules/mariadb/lib/cmd/stream.js"],"names":["Query","require","Readable","Stream","cmdOpts","connOpts","sql","values","socket","inStream","objectMode","read","on","meta","emit","err","push","row","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;;eACqBA,OAAO,CAAC,QAAD,C;IAApBC,Q,YAAAA,Q;AAER;;;;;;IAIMC,M;;;;;AACJ,kBAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,GAA/B,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoD;AAAA;;AAAA;;AAClD,gFACE,YAAM,CAAE,CADV,EAEE,YAAM,CAAE,CAFV,EAGEJ,OAHF,EAIEC,QAJF,EAKEC,GALF,EAMEC,MANF;AAQA,UAAKC,MAAL,GAAcA,MAAd;AACA,UAAKC,QAAL,GAAgB,IAAIP,QAAJ,CAAa;AAC3BQ,MAAAA,UAAU,EAAE,IADe;AAE3BC,MAAAA,IAAI,EAAE,gBAAM,CAAE;AAFa,KAAb,CAAhB;;AAKA,UAAKC,EAAL,CAAQ,QAAR,EAAkB,UAASC,IAAT,EAAe;AAC/B,WAAKJ,QAAL,CAAcK,IAAd,CAAmB,QAAnB,EAA6BD,IAA7B;AACD,KAFD;;AAIA,UAAKD,EAAL,CAAQ,OAAR,EAAiB,UAASG,GAAT,EAAc;AAC7B,WAAKN,QAAL,CAAcK,IAAd,CAAmB,OAAnB,EAA4BC,GAA5B;AACD,KAFD;;AAIA,UAAKH,EAAL,CAAQ,KAAR,EAAe,UAASG,GAAT,EAAc;AAC3B,UAAIA,GAAJ,EAAS,KAAKN,QAAL,CAAcK,IAAd,CAAmB,OAAnB,EAA4BC,GAA5B;AACT,WAAKN,QAAL,CAAcO,IAAd,CAAmB,IAAnB;AACD,KAHD;;AAvBkD;AA2BnD;;;;kCAEaC,G,EAAK;AACjB,WAAKR,QAAL,CAAcO,IAAd,CAAmBC,GAAnB;AACD;;;;EAhCkBjB,K;;AAmCrBkB,MAAM,CAACC,OAAP,GAAiBhB,MAAjB","sourcesContent":["'use strict';\n\nconst Query = require('./query');\nconst { Readable } = require('stream');\n\n/**\n * Protocol COM_QUERY with streaming events.\n * see : https://mariadb.com/kb/en/library/com_query/\n */\nclass Stream extends Query {\n  constructor(cmdOpts, connOpts, sql, values, socket) {\n    super(\n      () => {},\n      () => {},\n      cmdOpts,\n      connOpts,\n      sql,\n      values\n    );\n    this.socket = socket;\n    this.inStream = new Readable({\n      objectMode: true,\n      read: () => {}\n    });\n\n    this.on('fields', function(meta) {\n      this.inStream.emit('fields', meta);\n    });\n\n    this.on('error', function(err) {\n      this.inStream.emit('error', err);\n    });\n\n    this.on('end', function(err) {\n      if (err) this.inStream.emit('error', err);\n      this.inStream.push(null);\n    });\n  }\n\n  handleNewRows(row) {\n    this.inStream.push(row);\n  }\n}\n\nmodule.exports = Stream;\n"]},"metadata":{},"sourceType":"script"}