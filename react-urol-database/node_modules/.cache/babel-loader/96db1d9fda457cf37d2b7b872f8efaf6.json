{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Command = require('./command');\n\nvar Errors = require('../misc/errors');\n/**\n * send a COM_PING: permits sending a packet containing one byte to check that the connection is active.\n * see https://mariadb.com/kb/en/library/com_ping/\n */\n\n\nvar Ping =\n/*#__PURE__*/\nfunction (_Command) {\n  _inherits(Ping, _Command);\n\n  function Ping(resolve, reject) {\n    _classCallCheck(this, Ping);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Ping).call(this, resolve, reject));\n  }\n\n  _createClass(Ping, [{\n    key: \"start\",\n    value: function start(out, opts, info) {\n      out.startPacket(this);\n      out.writeInt8(0x0e);\n      out.flushBuffer(true);\n      this.emit('send_end');\n      this.onPacketReceive = this.readPingResponsePacket;\n    }\n    /**\n     * Read ping response packet.\n     * packet can be :\n     * - an ERR_Packet\n     * - a OK_Packet\n     *\n     * @param packet  query response\n     * @param out     output writer\n     * @param opts    connection options\n     * @param info    connection info\n     */\n\n  }, {\n    key: \"readPingResponsePacket\",\n    value: function readPingResponsePacket(packet, out, opts, info) {\n      if (packet.peek() !== 0x00) {\n        return this.throwNewError('unexpected packet', false, info, '42000', Errors.ER_PING_BAD_PACKET);\n      }\n\n      packet.skip(1); //skip header\n\n      packet.skipLengthCodedNumber(); //affected rows\n\n      packet.skipLengthCodedNumber(); //insert ids\n\n      info.status = packet.readUInt16();\n      this.successEnd(null);\n    }\n  }]);\n\n  return Ping;\n}(Command);\n\nmodule.exports = Ping;","map":{"version":3,"sources":["C:/Users/dembr/Documents/GitHub/react_projects/react-urol-database/node_modules/mariadb/lib/cmd/ping.js"],"names":["Command","require","Errors","Ping","resolve","reject","out","opts","info","startPacket","writeInt8","flushBuffer","emit","onPacketReceive","readPingResponsePacket","packet","peek","throwNewError","ER_PING_BAD_PACKET","skip","skipLengthCodedNumber","status","readUInt16","successEnd","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAAtB;AAEA;;;;;;IAIME,I;;;;;AACJ,gBAAYC,OAAZ,EAAqBC,MAArB,EAA6B;AAAA;;AAAA,6EACrBD,OADqB,EACZC,MADY;AAE5B;;;;0BAEKC,G,EAAKC,I,EAAMC,I,EAAM;AACrBF,MAAAA,GAAG,CAACG,WAAJ,CAAgB,IAAhB;AACAH,MAAAA,GAAG,CAACI,SAAJ,CAAc,IAAd;AACAJ,MAAAA,GAAG,CAACK,WAAJ,CAAgB,IAAhB;AACA,WAAKC,IAAL,CAAU,UAAV;AACA,WAAKC,eAAL,GAAuB,KAAKC,sBAA5B;AACD;AAED;;;;;;;;;;;;;;2CAWuBC,M,EAAQT,G,EAAKC,I,EAAMC,I,EAAM;AAC9C,UAAIO,MAAM,CAACC,IAAP,OAAkB,IAAtB,EAA4B;AAC1B,eAAO,KAAKC,aAAL,CACL,mBADK,EAEL,KAFK,EAGLT,IAHK,EAIL,OAJK,EAKLN,MAAM,CAACgB,kBALF,CAAP;AAOD;;AACDH,MAAAA,MAAM,CAACI,IAAP,CAAY,CAAZ,EAV8C,CAU9B;;AAChBJ,MAAAA,MAAM,CAACK,qBAAP,GAX8C,CAWd;;AAChCL,MAAAA,MAAM,CAACK,qBAAP,GAZ8C,CAYd;;AAChCZ,MAAAA,IAAI,CAACa,MAAL,GAAcN,MAAM,CAACO,UAAP,EAAd;AACA,WAAKC,UAAL,CAAgB,IAAhB;AACD;;;;EAvCgBvB,O;;AA0CnBwB,MAAM,CAACC,OAAP,GAAiBtB,IAAjB","sourcesContent":["'use strict';\n\nconst Command = require('./command');\nconst Errors = require('../misc/errors');\n\n/**\n * send a COM_PING: permits sending a packet containing one byte to check that the connection is active.\n * see https://mariadb.com/kb/en/library/com_ping/\n */\nclass Ping extends Command {\n  constructor(resolve, reject) {\n    super(resolve, reject);\n  }\n\n  start(out, opts, info) {\n    out.startPacket(this);\n    out.writeInt8(0x0e);\n    out.flushBuffer(true);\n    this.emit('send_end');\n    this.onPacketReceive = this.readPingResponsePacket;\n  }\n\n  /**\n   * Read ping response packet.\n   * packet can be :\n   * - an ERR_Packet\n   * - a OK_Packet\n   *\n   * @param packet  query response\n   * @param out     output writer\n   * @param opts    connection options\n   * @param info    connection info\n   */\n  readPingResponsePacket(packet, out, opts, info) {\n    if (packet.peek() !== 0x00) {\n      return this.throwNewError(\n        'unexpected packet',\n        false,\n        info,\n        '42000',\n        Errors.ER_PING_BAD_PACKET\n      );\n    }\n    packet.skip(1); //skip header\n    packet.skipLengthCodedNumber(); //affected rows\n    packet.skipLengthCodedNumber(); //insert ids\n    info.status = packet.readUInt16();\n    this.successEnd(null);\n  }\n}\n\nmodule.exports = Ping;\n"]},"metadata":{},"sourceType":"script"}