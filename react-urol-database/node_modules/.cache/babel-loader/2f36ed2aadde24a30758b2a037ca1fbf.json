{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\dembr\\\\Documents\\\\GitHub\\\\react_projects\\\\react-urol-database\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar Capabilities = require('../../const/capabilities');\n\nvar ConnectionInformation = require('../../misc/connection-information');\n/**\n * Parser server initial handshake.\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/#initial-handshake-packet\n */\n\n\nvar InitialHandshake = function InitialHandshake(packet, info) {\n  _classCallCheck(this, InitialHandshake);\n\n  //protocolVersion\n  packet.skip(1);\n  info.serverVersion = {};\n  info.serverVersion.raw = packet.readStringNullEnded();\n  info.threadId = packet.readUInt32();\n  var seed1 = packet.readBuffer(8);\n  packet.skip(1); //reserved byte\n\n  info.serverCapabilities = packet.readUInt16(); //skip characterSet\n\n  packet.skip(1);\n  info.status = packet.readUInt16();\n  info.serverCapabilities += packet.readUInt16() << 16;\n  var saltLength = 0;\n\n  if (info.serverCapabilities & Capabilities.PLUGIN_AUTH) {\n    saltLength = Math.max(12, packet.readUInt8() - 9);\n  } else {\n    packet.skip(1);\n  }\n\n  packet.skip(10);\n\n  if (info.serverCapabilities & Capabilities.SECURE_CONNECTION) {\n    var seed2 = packet.readBuffer(saltLength);\n    info.seed = Buffer.concat([seed1, seed2]);\n  } else {\n    info.seed = seed1;\n  }\n\n  packet.skip(1);\n  /**\n   * check for MariaDB 10.x replication hack , remove fake prefix if needed\n   * MDEV-4088: in 10.0+, the real version string maybe prefixed with \"5.5.5-\",\n   * to workaround bugs in Oracle MySQL replication\n   **/\n\n  if (info.serverVersion.raw.startsWith('5.5.5-')) {\n    info.serverVersion.mariaDb = true;\n    info.serverVersion.raw = info.serverVersion.raw.substring('5.5.5-'.length);\n  } else {\n    //Support for MDEV-7780 faking server version\n    info.serverVersion.mariaDb = info.serverVersion.raw.includes('MariaDB') || (info.serverCapabilities & Capabilities.MYSQL) === 0;\n  }\n\n  if (info.serverCapabilities & Capabilities.PLUGIN_AUTH) {\n    this.pluginName = packet.readStringNullEnded();\n  } else {\n    this.pluginName = '';\n  }\n\n  ConnectionInformation.parseVersionString(info);\n};\n\nmodule.exports = InitialHandshake;","map":{"version":3,"sources":["C:/Users/dembr/Documents/GitHub/react_projects/react-urol-database/node_modules/mariadb/lib/cmd/handshake/initial-handshake.js"],"names":["Capabilities","require","ConnectionInformation","InitialHandshake","packet","info","skip","serverVersion","raw","readStringNullEnded","threadId","readUInt32","seed1","readBuffer","serverCapabilities","readUInt16","status","saltLength","PLUGIN_AUTH","Math","max","readUInt8","SECURE_CONNECTION","seed2","seed","Buffer","concat","startsWith","mariaDb","substring","length","includes","MYSQL","pluginName","parseVersionString","module","exports"],"mappings":"AAAA;;;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,0BAAD,CAA5B;;AACA,IAAMC,qBAAqB,GAAGD,OAAO,CAAC,mCAAD,CAArC;AAEA;;;;;;IAIME,gB,GACJ,0BAAYC,MAAZ,EAAoBC,IAApB,EAA0B;AAAA;;AACxB;AACAD,EAAAA,MAAM,CAACE,IAAP,CAAY,CAAZ;AACAD,EAAAA,IAAI,CAACE,aAAL,GAAqB,EAArB;AACAF,EAAAA,IAAI,CAACE,aAAL,CAAmBC,GAAnB,GAAyBJ,MAAM,CAACK,mBAAP,EAAzB;AACAJ,EAAAA,IAAI,CAACK,QAAL,GAAgBN,MAAM,CAACO,UAAP,EAAhB;AAEA,MAAIC,KAAK,GAAGR,MAAM,CAACS,UAAP,CAAkB,CAAlB,CAAZ;AACAT,EAAAA,MAAM,CAACE,IAAP,CAAY,CAAZ,EARwB,CAQR;;AAEhBD,EAAAA,IAAI,CAACS,kBAAL,GAA0BV,MAAM,CAACW,UAAP,EAA1B,CAVwB,CAWxB;;AACAX,EAAAA,MAAM,CAACE,IAAP,CAAY,CAAZ;AACAD,EAAAA,IAAI,CAACW,MAAL,GAAcZ,MAAM,CAACW,UAAP,EAAd;AACAV,EAAAA,IAAI,CAACS,kBAAL,IAA2BV,MAAM,CAACW,UAAP,MAAuB,EAAlD;AAEA,MAAIE,UAAU,GAAG,CAAjB;;AACA,MAAIZ,IAAI,CAACS,kBAAL,GAA0Bd,YAAY,CAACkB,WAA3C,EAAwD;AACtDD,IAAAA,UAAU,GAAGE,IAAI,CAACC,GAAL,CAAS,EAAT,EAAahB,MAAM,CAACiB,SAAP,KAAqB,CAAlC,CAAb;AACD,GAFD,MAEO;AACLjB,IAAAA,MAAM,CAACE,IAAP,CAAY,CAAZ;AACD;;AACDF,EAAAA,MAAM,CAACE,IAAP,CAAY,EAAZ;;AAEA,MAAID,IAAI,CAACS,kBAAL,GAA0Bd,YAAY,CAACsB,iBAA3C,EAA8D;AAC5D,QAAIC,KAAK,GAAGnB,MAAM,CAACS,UAAP,CAAkBI,UAAlB,CAAZ;AACAZ,IAAAA,IAAI,CAACmB,IAAL,GAAYC,MAAM,CAACC,MAAP,CAAc,CAACd,KAAD,EAAQW,KAAR,CAAd,CAAZ;AACD,GAHD,MAGO;AACLlB,IAAAA,IAAI,CAACmB,IAAL,GAAYZ,KAAZ;AACD;;AACDR,EAAAA,MAAM,CAACE,IAAP,CAAY,CAAZ;AAEA;;;;;;AAMA,MAAID,IAAI,CAACE,aAAL,CAAmBC,GAAnB,CAAuBmB,UAAvB,CAAkC,QAAlC,CAAJ,EAAiD;AAC/CtB,IAAAA,IAAI,CAACE,aAAL,CAAmBqB,OAAnB,GAA6B,IAA7B;AACAvB,IAAAA,IAAI,CAACE,aAAL,CAAmBC,GAAnB,GAAyBH,IAAI,CAACE,aAAL,CAAmBC,GAAnB,CAAuBqB,SAAvB,CAAiC,SAASC,MAA1C,CAAzB;AACD,GAHD,MAGO;AACL;AACAzB,IAAAA,IAAI,CAACE,aAAL,CAAmBqB,OAAnB,GACEvB,IAAI,CAACE,aAAL,CAAmBC,GAAnB,CAAuBuB,QAAvB,CAAgC,SAAhC,KACA,CAAC1B,IAAI,CAACS,kBAAL,GAA0Bd,YAAY,CAACgC,KAAxC,MAAmD,CAFrD;AAGD;;AAED,MAAI3B,IAAI,CAACS,kBAAL,GAA0Bd,YAAY,CAACkB,WAA3C,EAAwD;AACtD,SAAKe,UAAL,GAAkB7B,MAAM,CAACK,mBAAP,EAAlB;AACD,GAFD,MAEO;AACL,SAAKwB,UAAL,GAAkB,EAAlB;AACD;;AACD/B,EAAAA,qBAAqB,CAACgC,kBAAtB,CAAyC7B,IAAzC;AACD,C;;AAGH8B,MAAM,CAACC,OAAP,GAAiBjC,gBAAjB","sourcesContent":["'use strict';\n\nconst Capabilities = require('../../const/capabilities');\nconst ConnectionInformation = require('../../misc/connection-information');\n\n/**\n * Parser server initial handshake.\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/#initial-handshake-packet\n */\nclass InitialHandshake {\n  constructor(packet, info) {\n    //protocolVersion\n    packet.skip(1);\n    info.serverVersion = {};\n    info.serverVersion.raw = packet.readStringNullEnded();\n    info.threadId = packet.readUInt32();\n\n    let seed1 = packet.readBuffer(8);\n    packet.skip(1); //reserved byte\n\n    info.serverCapabilities = packet.readUInt16();\n    //skip characterSet\n    packet.skip(1);\n    info.status = packet.readUInt16();\n    info.serverCapabilities += packet.readUInt16() << 16;\n\n    let saltLength = 0;\n    if (info.serverCapabilities & Capabilities.PLUGIN_AUTH) {\n      saltLength = Math.max(12, packet.readUInt8() - 9);\n    } else {\n      packet.skip(1);\n    }\n    packet.skip(10);\n\n    if (info.serverCapabilities & Capabilities.SECURE_CONNECTION) {\n      let seed2 = packet.readBuffer(saltLength);\n      info.seed = Buffer.concat([seed1, seed2]);\n    } else {\n      info.seed = seed1;\n    }\n    packet.skip(1);\n\n    /**\n     * check for MariaDB 10.x replication hack , remove fake prefix if needed\n     * MDEV-4088: in 10.0+, the real version string maybe prefixed with \"5.5.5-\",\n     * to workaround bugs in Oracle MySQL replication\n     **/\n\n    if (info.serverVersion.raw.startsWith('5.5.5-')) {\n      info.serverVersion.mariaDb = true;\n      info.serverVersion.raw = info.serverVersion.raw.substring('5.5.5-'.length);\n    } else {\n      //Support for MDEV-7780 faking server version\n      info.serverVersion.mariaDb =\n        info.serverVersion.raw.includes('MariaDB') ||\n        (info.serverCapabilities & Capabilities.MYSQL) === 0;\n    }\n\n    if (info.serverCapabilities & Capabilities.PLUGIN_AUTH) {\n      this.pluginName = packet.readStringNullEnded();\n    } else {\n      this.pluginName = '';\n    }\n    ConnectionInformation.parseVersionString(info);\n  }\n}\n\nmodule.exports = InitialHandshake;\n"]},"metadata":{},"sourceType":"script"}