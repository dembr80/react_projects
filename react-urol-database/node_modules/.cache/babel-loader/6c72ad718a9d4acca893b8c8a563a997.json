{"ast":null,"code":"'use strict';\n\nvar Capabilities = require('../../const/capabilities');\n/**\n * Initialize client capabilities according to options and server capabilities\n *\n * @param opts                options\n * @param info                information\n */\n\n\nmodule.exports.init = function (opts, info) {\n  var capabilities = Capabilities.IGNORE_SPACE | Capabilities.PROTOCOL_41 | Capabilities.TRANSACTIONS | Capabilities.SECURE_CONNECTION | Capabilities.MULTI_RESULTS | Capabilities.PS_MULTI_RESULTS | Capabilities.SESSION_TRACK | Capabilities.PLUGIN_AUTH | Capabilities.PLUGIN_AUTH_LENENC_CLIENT_DATA;\n\n  if (opts.connectAttributes) {\n    capabilities |= Capabilities.CONNECT_ATTRS;\n  }\n\n  if (opts.foundRows) {\n    capabilities |= Capabilities.FOUND_ROWS;\n  }\n\n  if (opts.permitLocalInfile) {\n    capabilities |= Capabilities.LOCAL_FILES;\n  }\n\n  if (opts.multipleStatements) {\n    capabilities |= Capabilities.MULTI_STATEMENTS;\n  }\n\n  info.eofDeprecated = (info.serverCapabilities & Capabilities.DEPRECATE_EOF) > 0;\n\n  if (info.eofDeprecated) {\n    capabilities |= Capabilities.DEPRECATE_EOF;\n  }\n\n  if (opts.database) {\n    capabilities |= Capabilities.CONNECT_WITH_DB;\n  } // use compression only if requested by client and supported by server\n\n\n  if (opts.compress) {\n    if (info.serverCapabilities & Capabilities.COMPRESS) {\n      capabilities |= Capabilities.COMPRESS;\n    } else {\n      opts.compress = false;\n    }\n  }\n\n  if (opts.permitConnectionWhenExpired) {\n    capabilities |= Capabilities.CAN_HANDLE_EXPIRED_PASSWORDS;\n  }\n\n  info.clientCapabilities = capabilities;\n};","map":{"version":3,"sources":["C:/Users/dembr/Documents/GitHub/react_projects/react-urol-database/node_modules/mariadb/lib/cmd/handshake/client-capabilities.js"],"names":["Capabilities","require","module","exports","init","opts","info","capabilities","IGNORE_SPACE","PROTOCOL_41","TRANSACTIONS","SECURE_CONNECTION","MULTI_RESULTS","PS_MULTI_RESULTS","SESSION_TRACK","PLUGIN_AUTH","PLUGIN_AUTH_LENENC_CLIENT_DATA","connectAttributes","CONNECT_ATTRS","foundRows","FOUND_ROWS","permitLocalInfile","LOCAL_FILES","multipleStatements","MULTI_STATEMENTS","eofDeprecated","serverCapabilities","DEPRECATE_EOF","database","CONNECT_WITH_DB","compress","COMPRESS","permitConnectionWhenExpired","CAN_HANDLE_EXPIRED_PASSWORDS","clientCapabilities"],"mappings":"AAAA;;AAEA,IAAMA,YAAY,GAAGC,OAAO,CAAC,0BAAD,CAA5B;AAEA;;;;;;;;AAMAC,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsB,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACzC,MAAIC,YAAY,GACdP,YAAY,CAACQ,YAAb,GACAR,YAAY,CAACS,WADb,GAEAT,YAAY,CAACU,YAFb,GAGAV,YAAY,CAACW,iBAHb,GAIAX,YAAY,CAACY,aAJb,GAKAZ,YAAY,CAACa,gBALb,GAMAb,YAAY,CAACc,aANb,GAOAd,YAAY,CAACe,WAPb,GAQAf,YAAY,CAACgB,8BATf;;AAWA,MAAIX,IAAI,CAACY,iBAAT,EAA4B;AAC1BV,IAAAA,YAAY,IAAIP,YAAY,CAACkB,aAA7B;AACD;;AAED,MAAIb,IAAI,CAACc,SAAT,EAAoB;AAClBZ,IAAAA,YAAY,IAAIP,YAAY,CAACoB,UAA7B;AACD;;AAED,MAAIf,IAAI,CAACgB,iBAAT,EAA4B;AAC1Bd,IAAAA,YAAY,IAAIP,YAAY,CAACsB,WAA7B;AACD;;AAED,MAAIjB,IAAI,CAACkB,kBAAT,EAA6B;AAC3BhB,IAAAA,YAAY,IAAIP,YAAY,CAACwB,gBAA7B;AACD;;AAEDlB,EAAAA,IAAI,CAACmB,aAAL,GAAqB,CAACnB,IAAI,CAACoB,kBAAL,GAA0B1B,YAAY,CAAC2B,aAAxC,IAAyD,CAA9E;;AACA,MAAIrB,IAAI,CAACmB,aAAT,EAAwB;AACtBlB,IAAAA,YAAY,IAAIP,YAAY,CAAC2B,aAA7B;AACD;;AAED,MAAItB,IAAI,CAACuB,QAAT,EAAmB;AACjBrB,IAAAA,YAAY,IAAIP,YAAY,CAAC6B,eAA7B;AACD,GAnCwC,CAqCzC;;;AACA,MAAIxB,IAAI,CAACyB,QAAT,EAAmB;AACjB,QAAIxB,IAAI,CAACoB,kBAAL,GAA0B1B,YAAY,CAAC+B,QAA3C,EAAqD;AACnDxB,MAAAA,YAAY,IAAIP,YAAY,CAAC+B,QAA7B;AACD,KAFD,MAEO;AACL1B,MAAAA,IAAI,CAACyB,QAAL,GAAgB,KAAhB;AACD;AACF;;AAED,MAAIzB,IAAI,CAAC2B,2BAAT,EAAsC;AACpCzB,IAAAA,YAAY,IAAIP,YAAY,CAACiC,4BAA7B;AACD;;AACD3B,EAAAA,IAAI,CAAC4B,kBAAL,GAA0B3B,YAA1B;AACD,CAlDD","sourcesContent":["'use strict';\n\nconst Capabilities = require('../../const/capabilities');\n\n/**\n * Initialize client capabilities according to options and server capabilities\n *\n * @param opts                options\n * @param info                information\n */\nmodule.exports.init = function(opts, info) {\n  let capabilities =\n    Capabilities.IGNORE_SPACE |\n    Capabilities.PROTOCOL_41 |\n    Capabilities.TRANSACTIONS |\n    Capabilities.SECURE_CONNECTION |\n    Capabilities.MULTI_RESULTS |\n    Capabilities.PS_MULTI_RESULTS |\n    Capabilities.SESSION_TRACK |\n    Capabilities.PLUGIN_AUTH |\n    Capabilities.PLUGIN_AUTH_LENENC_CLIENT_DATA;\n\n  if (opts.connectAttributes) {\n    capabilities |= Capabilities.CONNECT_ATTRS;\n  }\n\n  if (opts.foundRows) {\n    capabilities |= Capabilities.FOUND_ROWS;\n  }\n\n  if (opts.permitLocalInfile) {\n    capabilities |= Capabilities.LOCAL_FILES;\n  }\n\n  if (opts.multipleStatements) {\n    capabilities |= Capabilities.MULTI_STATEMENTS;\n  }\n\n  info.eofDeprecated = (info.serverCapabilities & Capabilities.DEPRECATE_EOF) > 0;\n  if (info.eofDeprecated) {\n    capabilities |= Capabilities.DEPRECATE_EOF;\n  }\n\n  if (opts.database) {\n    capabilities |= Capabilities.CONNECT_WITH_DB;\n  }\n\n  // use compression only if requested by client and supported by server\n  if (opts.compress) {\n    if (info.serverCapabilities & Capabilities.COMPRESS) {\n      capabilities |= Capabilities.COMPRESS;\n    } else {\n      opts.compress = false;\n    }\n  }\n\n  if (opts.permitConnectionWhenExpired) {\n    capabilities |= Capabilities.CAN_HANDLE_EXPIRED_PASSWORDS;\n  }\n  info.clientCapabilities = capabilities;\n};\n"]},"metadata":{},"sourceType":"script"}